"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[794],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>g});var t=n(7294);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=t.createContext({}),p=function(e){var a=t.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},c=function(e){var a=p(e.components);return t.createElement(o.Provider,{value:a},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=l,g=d["".concat(o,".").concat(m)]||d[m]||u[m]||r;return n?t.createElement(g,s(s({ref:a},c),{},{components:n})):t.createElement(g,s({ref:a},c))}));function g(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i[d]="string"==typeof e?e:l,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4858:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var t=n(7462),l=(n(7294),n(3905));const r={},s="PHP",i={unversionedId:"php_snippets",id:"php_snippets",title:"PHP",description:"Hello World",source:"@site/docs/php_snippets.md",sourceDirName:".",slug:"/php_snippets",permalink:"/docs/php_snippets",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/php_snippets.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Perl",permalink:"/docs/perl_snippets"},next:{title:"Python",permalink:"/docs/python_snippets"}},o={},p=[{value:"Hello World",id:"hello-world",level:3},{value:"Variables and constants",id:"variables-and-constants",level:3},{value:"Data types",id:"data-types",level:3},{value:"Arrays",id:"arrays",level:3},{value:"Associative arrays",id:"associative-arrays",level:3},{value:"Conditional statements",id:"conditional-statements",level:3},{value:"For loop",id:"for-loop",level:3},{value:"While loop",id:"while-loop",level:3},{value:"Functions",id:"functions",level:3},{value:"Include and require",id:"include-and-require",level:3},{value:"Working with files",id:"working-with-files",level:3},{value:"Error handling",id:"error-handling",level:3},{value:"Cookies",id:"cookies",level:3},{value:"Sessions",id:"sessions",level:3},{value:"Forms and POST Data",id:"forms-and-post-data",level:3},{value:"MySQL Database Connection",id:"mysql-database-connection",level:3},{value:"SQL Queries",id:"sql-queries",level:3},{value:"Fetching data from MySQL",id:"fetching-data-from-mysql",level:3},{value:"Inserting data into MySQL",id:"inserting-data-into-mysql",level:3},{value:"Updating data in MySQL",id:"updating-data-in-mysql",level:3},{value:"Deleting data from MySQL",id:"deleting-data-from-mysql",level:3},{value:"Object-oriented programming",id:"object-oriented-programming",level:3},{value:"Inheritance",id:"inheritance",level:3},{value:"Namespaces",id:"namespaces",level:3},{value:"Composer (Dependency Manager)",id:"composer-dependency-manager",level:3},{value:"Regular Expressions",id:"regular-expressions",level:3},{value:"Sending emails",id:"sending-emails",level:3},{value:"RESTful api",id:"restful-api",level:3},{value:"File upload",id:"file-upload",level:3},{value:"JSON Handling",id:"json-handling",level:3},{value:"Date and time",id:"date-and-time",level:3},{value:"Templating with PHP",id:"templating-with-php",level:3},{value:"URL parameters",id:"url-parameters",level:3},{value:"File writing",id:"file-writing",level:3},{value:"Sessions and User Authentication",id:"sessions-and-user-authentication",level:3},{value:"URL redirection",id:"url-redirection",level:3},{value:"Content-Type Headers",id:"content-type-headers",level:3},{value:"Creating and Using Classes",id:"creating-and-using-classes",level:3},{value:"File deletion",id:"file-deletion",level:3},{value:"Working with XML",id:"working-with-xml",level:3},{value:"Namespaces in Autoloading",id:"namespaces-in-autoloading",level:3},{value:"Exception handling and custom exception classes",id:"exception-handling-and-custom-exception-classes",level:3},{value:"Dependency injection in classes",id:"dependency-injection-in-classes",level:3},{value:"Namespaces for code organization",id:"namespaces-for-code-organization",level:3},{value:"PDO (PHP Data objects) for database access",id:"pdo-php-data-objects-for-database-access",level:3},{value:"Dependency injection in functions",id:"dependency-injection-in-functions",level:3},{value:"Namespaces for third-party libraries",id:"namespaces-for-third-party-libraries",level:3},{value:"Composer autoload",id:"composer-autoload",level:3},{value:"Singleton pattern",id:"singleton-pattern",level:3},{value:"File download",id:"file-download",level:3}],c={toc:p},d="wrapper";function u(e){let{components:a,...n}=e;return(0,l.kt)(d,(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"php"},"PHP"),(0,l.kt)("h3",{id:"hello-world"},"Hello World"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'echo "Hello, World!";\n')),(0,l.kt)("h3",{id:"variables-and-constants"},"Variables and constants"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$variable = 10;\ndefine("CONSTANT_VALUE", 5);\n')),(0,l.kt)("h3",{id:"data-types"},"Data types"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$integer = 42;\n$float = 3.14;\n$string = "Hello, PHP!";\n$boolean = true;\n$array = array(1, 2, 3);\n$object = new stdClass();\n$null = null;\n')),(0,l.kt)("h3",{id:"arrays"},"Arrays"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$fruits = ["Apple", "Banana", "Orange"];\narray_push($fruits, "Mango");\n')),(0,l.kt)("h3",{id:"associative-arrays"},"Associative arrays"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$person = ["name" => "John", "age" => 25];\n$person["city"] = "New York\n')),(0,l.kt)("h3",{id:"conditional-statements"},"Conditional statements"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'if ($age >= 18) {\n    echo "You are an adult.";\n} else {\n    echo "You are a minor.";\n}\n')),(0,l.kt)("h3",{id:"for-loop"},"For loop"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"for ($i = 0; $i < 5; $i++) {\n    echo $i;\n}\n")),(0,l.kt)("h3",{id:"while-loop"},"While loop"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$count = 0;\nwhile ($count < 5) {\n    echo $count;\n    $count++;\n}\n")),(0,l.kt)("h3",{id:"functions"},"Functions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'function greet($name) {\n    return "Hello, $name!";\n}\n')),(0,l.kt)("h3",{id:"include-and-require"},"Include and require"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'include "header.php";\nrequire "config.php";\n')),(0,l.kt)("h3",{id:"working-with-files"},"Working with files"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$file = fopen("data.txt", "r");\n$content = fread($file, filesize("data.txt"));\nfclose($file);\n')),(0,l.kt)("h3",{id:"error-handling"},"Error handling"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'try {\n    // Code that may throw an exception\n} catch (Exception $e) {\n    echo "An error occurred: " . $e->getMessage();\n}\n')),(0,l.kt)("h3",{id:"cookies"},"Cookies"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'setcookie("username", "John", time() + 3600, "/");\n$username = $_COOKIE["username"];\n')),(0,l.kt)("h3",{id:"sessions"},"Sessions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'session_start();\n$_SESSION["user_id"] = 123;\n')),(0,l.kt)("h3",{id:"forms-and-post-data"},"Forms and POST Data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'if ($_SERVER["REQUEST_METHOD"] == "POST") {\n    $username = $_POST["username"];\n    $password = $_POST["password"];\n}\n')),(0,l.kt)("h3",{id:"mysql-database-connection"},"MySQL Database Connection"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$servername = "localhost";\n$username = "root";\n$password = "password";\n$database = "mydb";\n\n$conn = new mysqli($servername, $username, $password, $database);\n')),(0,l.kt)("h3",{id:"sql-queries"},"SQL Queries"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$sql = \"SELECT * FROM users WHERE username='$username'\";\n$result = $conn->query($sql);\n")),(0,l.kt)("h3",{id:"fetching-data-from-mysql"},"Fetching data from MySQL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'while ($row = $result->fetch_assoc()) {\n    echo "Name: " . $row["name"];\n}\n')),(0,l.kt)("h3",{id:"inserting-data-into-mysql"},"Inserting data into MySQL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$sql = \"INSERT INTO users (username, password) VALUES ('$username', '$password')\";\n$conn->query($sql);\n")),(0,l.kt)("h3",{id:"updating-data-in-mysql"},"Updating data in MySQL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$sql = \"UPDATE users SET email='$email' WHERE id=$user_id\";\n$conn->query($sql);\n")),(0,l.kt)("h3",{id:"deleting-data-from-mysql"},"Deleting data from MySQL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$sql = "DELETE FROM users WHERE id=$user_id";\n$conn->query($sql);\n')),(0,l.kt)("h3",{id:"object-oriented-programming"},"Object-oriented programming"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'class Person {\n    public $name;\n    public $age;\n\n    public function greet() {\n        echo "Hello, my name is $this->name.";\n    }\n}\n')),(0,l.kt)("h3",{id:"inheritance"},"Inheritance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"class Student extends Person {\n    public $studentID;\n}\n")),(0,l.kt)("h3",{id:"namespaces"},"Namespaces"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"namespace MyProject;\n")),(0,l.kt)("h3",{id:"composer-dependency-manager"},"Composer (Dependency Manager)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"// Install a package\ncomposer require vendor/package\n\n// Autoload packages\nrequire 'vendor/autoload.php';\n")),(0,l.kt)("h3",{id:"regular-expressions"},"Regular Expressions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$pattern = "/[0-9]{4}-[0-9]{2}-[0-9]{2}/";\n$validDate = preg_match($pattern, "2023-09-04");\n')),(0,l.kt)("h3",{id:"sending-emails"},"Sending emails"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$to = "recipient@example.com";\n$subject = "Hello";\n$message = "This is a test email.";\n$headers = "From: sender@example.com";\n\nmail($to, $subject, $message, $headers);\n')),(0,l.kt)("h3",{id:"restful-api"},"RESTful api"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'// Handle GET request\nif ($_SERVER["REQUEST_METHOD"] == "GET") {\n    $data = ["message" => "GET request received"];\n    echo json_encode($data);\n}\n')),(0,l.kt)("h3",{id:"file-upload"},"File upload"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'if ($_FILES["file"]["error"] == 0) {\n    move_uploaded_file($_FILES["file"]["tmp_name"], "uploads/" . $_FILES["file"]["name"]);\n}\n')),(0,l.kt)("h3",{id:"json-handling"},"JSON Handling"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$data = \'{"name": "John", "age": 30}\';\n$decodedData = json_decode($data);\n')),(0,l.kt)("h3",{id:"date-and-time"},"Date and time"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$currentDate = date("Y-m-d H:i:s");\n')),(0,l.kt)("h3",{id:"templating-with-php"},"Templating with PHP"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'// Include a template file\ninclude "template.php";\n')),(0,l.kt)("h3",{id:"url-parameters"},"URL parameters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$id = $_GET["id"];\n')),(0,l.kt)("h3",{id:"file-writing"},"File writing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$file = fopen("data.txt", "w");\nfwrite($file, "Hello, PHP!");\nfclose($file);\n')),(0,l.kt)("h3",{id:"sessions-and-user-authentication"},"Sessions and User Authentication"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'session_start();\nif (!isset($_SESSION["user_id"])) {\n    // Redirect to login page\n}\n')),(0,l.kt)("h3",{id:"url-redirection"},"URL redirection"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'header("Location: https://example.com");\n')),(0,l.kt)("h3",{id:"content-type-headers"},"Content-Type Headers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'header("Content-Type: application/json");\n')),(0,l.kt)("h3",{id:"creating-and-using-classes"},"Creating and Using Classes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'class Car {\n    private $make;\n    private $model;\n\n    public function __construct($make, $model) {\n        $this->make = $make;\n        $this->model = $model;\n    }\n\n    public function getInfo() {\n        return "Make: $this->make, Model: $this->model";\n    }\n}\n')),(0,l.kt)("h3",{id:"file-deletion"},"File deletion"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'if (file_exists("oldfile.txt")) {\n    unlink("oldfile.txt");\n}\n')),(0,l.kt)("h3",{id:"working-with-xml"},"Working with XML"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$xml = simplexml_load_string("<book><title>PHP Basics</title></book>");\n$title = $xml->title;\n')),(0,l.kt)("h3",{id:"namespaces-in-autoloading"},"Namespaces in Autoloading"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'// Autoloading classes within a namespace\nspl_autoload_register(function ($className) {\n    $className = str_replace("\\\\", DIRECTORY_SEPARATOR, $className);\n    require_once __DIR__ . "/{$className}.php";\n});\n')),(0,l.kt)("h3",{id:"exception-handling-and-custom-exception-classes"},"Exception handling and custom exception classes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'class MyCustomException extends Exception {}\n\ntry {\n    // Some code that may throw an exception\n    throw new MyCustomException("This is a custom exception.");\n} catch (MyCustomException $e) {\n    echo "Caught exception: " . $e->getMessage();\n}\n')),(0,l.kt)("h3",{id:"dependency-injection-in-classes"},"Dependency injection in classes"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'class Database {\n    public function __construct($hostname, $username, $password, $database) {\n        // Database connection setup\n    }\n}\n\n$database = new Database("localhost", "username", "password", "mydb");\n')),(0,l.kt)("h3",{id:"namespaces-for-code-organization"},"Namespaces for code organization"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"namespace MyNamespace;\n\nclass MyClass {\n    // Class code here\n}\n")),(0,l.kt)("h3",{id:"pdo-php-data-objects-for-database-access"},"PDO (PHP Data objects) for database access"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'try {\n    $pdo = new PDO("mysql:host=localhost;dbname=mydb", "username", "password");\n    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    echo "Connection failed: " . $e->getMessage();\n}\n')),(0,l.kt)("h3",{id:"dependency-injection-in-functions"},"Dependency injection in functions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"function calculateTotal($price, $taxRate) {\n    return $price * (1 + $taxRate);\n}\n\n$total = calculateTotal(100, 0.1);\n")),(0,l.kt)("h3",{id:"namespaces-for-third-party-libraries"},"Namespaces for third-party libraries"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"use Vendor\\Library\\Class;\n\n$instance = new Class();\n")),(0,l.kt)("h3",{id:"composer-autoload"},"Composer autoload"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"require 'vendor/autoload.php';\n")),(0,l.kt)("h3",{id:"singleton-pattern"},"Singleton pattern"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"class Singleton {\n    private static $instance;\n\n    private function __construct() {}\n\n    public static function getInstance() {\n        if (self::$instance === null) {\n            self::$instance = new Singleton();\n        }\n        return self::$instance;\n    }\n}\n")),(0,l.kt)("h3",{id:"file-download"},"File download"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$file = 'example.txt';\nheader('Content-Description: File Transfer');\nheader('Content-Type: application/octet-stream');\nheader('Content-Disposition: attachment; filename=\"'.basename($file).'\"');\nreadfile($file);\n")))}u.isMDXComponent=!0}}]);